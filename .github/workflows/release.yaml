# learn more: https://docs.github.com/en/actions

# reference
# * https://jam.dev/blog/automating-chrome-extension-publishing/
# * https://developer.chrome.com/docs/webstore/using_webstore_api/
# * https://github.com/fregante/chrome-webstore-upload/blob/main/How%20to%20generate%20Google%20API%20keys.md
# * https://github.com/fregante/ghatemplates/blob/main/webext/release.yml

name: Chrome Web Store Release

env:
  CRX_EXTENSION_ID: mkjgbogdoogelppeoecjeidjljhhbcdg
  OUT_DIR: dist

on:
  workflow_dispatch:

jobs:
  build-artifact:
    name: Build Extension Artifact 🏗️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🔎
        uses: actions/checkout@v3

      - name: Setup Node.js 🛠️
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm ⬇️
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - name: Store pnpm cache directory 💿
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache dependencies 🗄️
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies 📦
        run: pnpm install

      - name: Build 🔨
        run: pnpm build

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v3
        with:
          name: extension
          path: ${{ env.OUT_DIR }}

  stage-extension:
    name: Stage Extension on the Web Store 🚀
    runs-on: ubuntu-latest
    needs: build-artifact

    steps:
      - name: Get artifact 📥
        uses: actions/download-artifact@v3

      - name: Setup Node.js 🛠️
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Upload to web store 🚀
        env:
          EXTENSION_ID: ${{ env.CRX_EXTENSION_ID }}
          CLIENT_ID: ${{ secrets.CRX_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CRX_CLIENT_SECRET }}
          REFRESH_TOKEN: ${{ secrets.CRX_REFRESH_TOKEN }}
        run: npx chrome-webstore-upload-cli@2 upload --auto-publish
        working-directory: extension

  create-release:
    name: Create Release 💫
    runs-on: ubuntu-latest
    needs: build-artifact

    steps:
      - name: Checkout 🔎
        uses: actions/checkout@v3

      - name: Get version 📦
        id: get-version
        run: |
          echo "version=$(npx -c 'echo "$npm_package_version"')" >> $GITHUB_OUTPUT

      - name: Get release notes 📝
        id: release-notes
        uses: ffurrer2/extract-release-notes@v1

      - name: Get artifact 📥
        uses: actions/download-artifact@v3

      - name: Create Release 💫
        run: |
          gh release create ${{ steps.get-version.outputs.version }} extension.zip \
            --title ${{ steps.get-version.outputs.version }} \
            --target ${{ github.sha }} \
            --notes <<EOF
            ${{ steps.release-notes.outputs.notes }}
            EOF
